{"remainingRequest":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasiaspileva/WebHW/lesson11/frontend/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/src/App.vue","mtime":1640356962783},{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/css-loader/dist/cjs.js","mtime":1640344604559},{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640344604780},{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/postcss-loader/src/index.js","mtime":1640344604606},{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1640344604407},{"path":"/Users/anastasiaspileva/WebHW/lesson11/frontend/node_modules/vue-loader/lib/index.js","mtime":1640344604687}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewoKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Header :user=\"user\"/>\n    <Middle :posts=\"posts\" :users=\"users\"/>\n    <Footer/>\n  </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  components: {\n    Footer,\n    Middle,\n    Header\n  },\n  data: function () {\n    return {\n      user: null,\n      users: [],\n      posts: []\n    }\n  },\n  beforeMount() {\n    if (localStorage.getItem(\"jwt\") && !this.user) {\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n    }\n\n    axios.get(\"/api/1/posts\").then(response => {\n      this.posts = response.data;\n    });\n\n    axios.get(\"/api/1/users\").then(response => {\n      this.users = response.data;\n    });\n  },\n  beforeCreate: function () {\n    this.$root.$on(\"onEnter\", (login, password) => {\n      if (password === \"\") {\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n        return;\n      }\n\n      axios.post(\"/api/1/jwt\", {\n        login, password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\n      });\n    });\n\n    this.$root.$on(\"onRegister\", (login, name, password) => {\n      login = login.trim()\n      name = name.trim()\n      if (password === \"\") {\n        this.$root.$emit(\"onRegisterValidationError\", \"Password is required\");\n        return;\n      }\n\n      if (login.length < 3 || login.length > 16) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Login should contain from 3 to 16 characters\");\n        return;\n      }\n      if (!login.match(/^[a-z]+$/)) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Login should contain only lowercase latin letters\");\n        return;\n      }\n      if (name.length === 0 || name.length > 32) {\n        this.$root.$emit(\"onRegisterValidationError\", \"Name should contain from 1 to 32 characters\");\n        return;\n      }\n\n      axios.post(\"/api/1/users\", {\n        login, name, password\n      }).catch(error => {\n        this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n        // eslint-disable-next-line no-unused-vars\n      }).then(_ => {\n        axios.get(\"/api/1/users\").then(response => {\n          this.users = response.data;\n        });\n        this.$root.$emit(\"onEnter\", login, password);\n      })\n    });\n\n    this.$root.$on(\"onJwt\", (jwt) => {\n      localStorage.setItem(\"jwt\", jwt);\n\n      axios.get(\"/api/1/users/auth\", {\n        params: {\n          jwt\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.$root.$emit(\"onChangePage\", \"Index\");\n      }).catch(() => this.$root.$emit(\"onLogout\"))\n    });\n\n    this.$root.$on(\"onLogout\", () => {\n      localStorage.removeItem(\"jwt\");\n      this.user = null;\n    });\n\n  }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"]}]}